#include <iostream>
#include <utility>   // pair 사용을 위한 헤더
#include <string>

using namespace std;

// 두 pair가 같은지 비교하는 함수
void same(pair<int, string> a, pair<int, string> b)
{
    if (a == b) // pair의 == 연산자 오버로드 덕분에 값 비교 가능
        cout << "true" << endl;
    else
        cout << "false" << endl;
}

// 두 pair를 사전순으로 비교하는 함수
void comp(pair<int, string> a, pair<int, string> b)
{
    if (a < b) // pair의 < 연산자 오버로드, 먼저 first 비교, 같으면 second 비교
        cout << "true" << endl;
    else
        cout << "false" << endl;
}

int main(void)
{
    // pair 생성 (int, string)
    pair<int, string> p1 = make_pair(1, "apple");
    pair<int, string> p2 = make_pair(3, "banana");
    pair<int, string> p3 = make_pair(1, "apple");

    cout << "p1.first : " << p1.first << endl;   // 1 출력
    cout << "p1.second : " << p1.second << endl; // "apple" 출력
    cout << endl;

    // p1과 p2가 같은지 비교
    cout << "p1 == p2 ? ";
    same(p1, p2); // false 출력

    // p1과 p3가 같은지 비교
    cout << "p1 == p3 ? ";
    same(p1, p3); // true 출력
    cout << endl;

    // p1이 p2보다 작은지 비교 (사전순 비교)
    cout << "p1 < p2 ? ";
    comp(p1, p2); // true 출력 (1 < 3)

    // p1이 p3보다 작은지 비교
    cout << "p1 < p3 ? ";
    comp(p1, p3); // false 출력 (동일함)

    return 0;
}
